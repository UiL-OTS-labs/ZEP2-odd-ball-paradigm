

// Symbolic definition of item type.
enum ItemType
{
    ODD,                    // odd ball
    COMMON,                 // repeated stimulus
}


// Item table record.
record TestItem
{
    int         id;     // item id
    ItemType    type;   // item type
    string      fn;     // stimulus word sound filename
    int         marker; // Eeg marker
}


// Practice item table.
//   index: item number
TestItem[][] prac_items =
{
}

// Test item table.
//   index: item number
TestItem[][] test_items =
{
}

void prepare_items(
    TestItem[][]    items,
    int             num_sequences,
    int             sequence_length
    )
{
    items.size = num_sequences;
    int i = 0;
    int j = 0;
    int id = 1;
    int rmin = 1;
    int rmax = sequence_length - 1;

    while (j < num_sequences) {
        i = 0;
        items[j].size      = sequence_length;

        items[j][i].id     = id;
        items[j][i].type   = ODD;
        items[j][i].fn     = "oddball.wav";
        items[j][i].marker = MARKER_ODD;
        id++;
        i++;

        while (i < sequence_length) {
            items[j][i].id     = id;
            items[j][i].type   = COMMON;
            items[j][i].fn     = "commonball.wav";
            items[j][i].marker = MARKER_COMMON;

            i++;
            id++;
        }
        int swap = random(rmin, rmax);
        TestItem temp = items[j][swap];
        items[j][swap] = items[j][0];
        items[j][0] = temp;
        j++;
    }
}


void prepare_prac_items()
{
    prepare_items(prac_items, NUM_PRAC_SEQUENCES, NSTIM_PER_SEQUENCE);
}

void prepare_test_items()
{
    prepare_items(test_items, NUM_TEST_SEQUENCES, NSTIM_PER_SEQUENCE);
}


